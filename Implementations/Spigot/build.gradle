plugins {
    id 'java-library'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

repositories {
    mavenCentral()
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://repo.codemc.org/repository/maven-public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories'
    }
    maven {
        url "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        url "https://mvn.lumine.io/repository/maven-releases/"
    }
}

group = 'cz.neumimto.rpg'
version = project.p_spigot_version

dependencies {
    compileOnly 'com.google.auto.service:auto-service:1.0'
    annotationProcessor 'com.google.auto.service:auto-service:1.0'
    compileOnly 'com.google.auto.service:auto-service-annotations:1.0'

    annotationProcessor project(':Generator')

    api project(':Common')
    api project(':FlatFiles-Persistence')
    api 'de.tr7zw:item-nbt-api-plugin:' + project.nbtapi

    compileOnly project(':Bootstrap-Common')

    // api 'com.github.stefvanschie.inventoryframework:IF:' + project.if


    // runtimeOnly fileTree(dir: 'lib', include: '*.jar')
    implementation fileTree(dir: 'lib-cp', include: '*.jar')
    compileOnly fileTree(dir: 'lib', include: '*.jar')

    compileOnly "org.spigotmc:spigot-api:" + project.spigotapi

    compileOnly("org.spigotmc:plugin-annotations:" + project.pluginannotations) {
        exclude group: "org.bukkit", module: "bukkit"
    }

    compileOnly("com.comphenix.protocol:ProtocolLib:" + project.protocollib) {
        exclude group: "com.comphenix.executors", module: "BukkitExecutors"
    }

    //runtimeOnly 'com.github.dmulloy2:ProtocolLib:master'
    api 'com.elmakers.mine.bukkit:EffectLib:' + project.effectlib
    //  compileOnly 'placeholderapi.me.clip:placeholderapi:' + project.papi
    compileOnly 'com.gmail.filoghost.holographicdisplays:holographicdisplays-api:' + project.hdisplays
    compileOnly "co.aikar:acf-paper:" + project.acf

  // compileOnly('net.Indyuce:MMOItems:' + project.mmoitems) {
  //     exclude group: 'com.mojang', module: 'authlib'
  //     exclude group: 'org.jetbrains', module: 'annotations'
  // }

  // compileOnly('io.lumine:MythicLib:' + project.mythiclib)

  // compileOnly 'io.lumine.xikage:MythicMobs:' + project.mythicmobs

    compileOnly 'com.gitlab.SamB440:RPGRegions-2:' + project.rpgregions

    testImplementation('com.github.NeumimTo:MockBukkit:e92bb7bbd1') {
        exclude group: "org.spigotmc", module: "spigot-api"
        exclude group: "org.jetbrains", module: "annotations"
    }

}

shadowJar {
    archiveFileName = "NT-RPG-Spigot-16.x-${p_spigot_version}.jar"

    relocate 'com.electronwill', 'rpgshaded.com.electronwill'
    //todo  relocate 'com.github.stefvanschie', 'rpgshaded.com.github.stefvanschie'
    relocate 'com.google.inject', 'rpgshaded.com.google.inject'
    relocate 'com.squareup.javapoet', 'rpgshaded.com.squareup.javapoet'
    relocate 'com.typesafe.config', 'rpgshaded.com.typesafe.config'
    relocate 'javax.inject', 'rpgshaded.javax.inject'
    relocate 'net.bytebuddy', 'rpgshaded.net.bytebuddy'
    relocate 'org.aopalliance', 'rpgshaded.org.aopalliance'
    relocate 'org.codehaus', 'rpgshaded.org.codehaus'
    relocate 'de.slikey.effectlib', 'rpgshaded.de.slikey.effectlib'
    relocate 'de.tr7zw', 'rpgshaded.de.tr7zw'

    mergeServiceFiles()
}

build.dependsOn shadowJar
build.mustRunAfter tasks.getByPath(':Common:build')
build.mustRunAfter tasks.getByPath(':FlatFiles-Persistence:build')

