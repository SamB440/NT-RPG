Skills: [
  {
    #This skill is equivalent of a javaskill cz.neumimto.skills.active.SkillMegabolt.
    # Id must be unique
    Id: "ntrpg:megabolt2"
    SuperType: "Active"

    # Skill types
    Skill-Types: [
      "ntrpg:aoe",
      "ntrpg:lightning"
      "ntrpg:elemental"
    ]

    # If the skill may deal damage there must be node DamageType.
    # If the skill deals no damage to anyone (eg simple healing) this node should not be defined
    Damage-Type: "MAGIC"
    Handler: "nts"

    Script: """
        # read skill settings configuration values
        # $settings.X is a "shortcut" for config_value{ctx=@context, key="X"}
        @damage = $settings.damage
        @radius = $settings.radius

        @nearby_entities = find_nearby_entities{radius=@range}

        FOREACH @entity in @nearby_entities

            #With SuperType Active we can use reference @caster in our script
            IF damage{damager=@caster, target=@entity}
               spawn_particle{particle=Particle.LIGHTNING, atEntity=@entity}
            END
        END

        RETURN SkillResult.OK
    """
  }
  {
    Id: "id:vitalize"
    Skill-Types: [
      "ntrpg:healing"
    ]
    Handler: "ntrpg:periodic_regeneration"
  }
  {
    # AOE Stun and damage
    Id: "ntrpg:wrestle"
    SuperType: "Active"
    Handler: "nts"
    Skill-Types: [
      "ntrpg:aoe",
      "ntrpg:physical"
    ]
    Damage-Type: PHYSICAL
    Script: """
        @duration = $settings.duration

        @nearby_entities = find_nearby_entity{radius=@range}

        FOREACH @entity in @nearby_entities
            IF damage{damager=@caster, target=@entity}
                @effect = StunEffect{target=@target, duration=@duration}
                add_effect{effect=@effect, source=@caster, provider=@this_skill}
            END
        END

        RETURN SkillResult.OK
    """
  }
  {
    Id: "ntrpg:iceshot"
    SuperType: "Active"
    Skill-Types: [

    ]
    Damage-Type: MAGIC
    Handler: "ntrpg:iceshot"
  }
    {
      Id: "ntrpg:magicalmissile"
      SuperType: "Active"
      Skill-Types: [
        "ntrpg:projectile"

      ]
      Damage-Type: MAGIC
      Handler: "ntrpg:iceshot"
    }
  {
    Id: "ntrpg:lightning"
    Handler: "nts"
    Supertype: "Targeted"
    Skill-Types: [
        "ntrpg:elemental"
        "ntrpg:lightning"
        "ntrpg:damage_check_target"
    ]
    Damage-Type: LIGHTNING
    Script: """
        # Read skill settings configuration values
        # $settings.X is a "shortcut" for config_value{ctx=@context, key="X"}
        @damage = $settings.damage

        # With SuperType Targeted we can use reference @caster and @target in our script
        damage{damager=@caster, target=@target}
        spawn_particle{particle=Particle.LIGHTNING, atEntity=@target}

        RETURN SkillResult.OK
    """
  }
]